# This workflow demonstrates using cuenv in GitHub Actions
# After creating the 0.3.1 release, you can use this pattern in your workflows
name: Release with setup-cuenv
on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., 0.3.2)'
        required: true
        type: string

jobs:
  build:
    name: Build with cuenv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup cuenv
        uses: rawkode/cuenv/github/action/setup-cuenv@main
        with:
          version: 'latest' # Or specify a specific version like '0.3.1'
          
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
        
      - name: Enable Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v10
        
      - name: Build with cuenv and nix
        run: |
          # cuenv will be available in PATH
          cuenv exec -- nix build .#cuenv
          
          # Copy the built binary
          mkdir -p artifacts
          cp -L result/bin/cuenv artifacts/cuenv-linux-x86_64
          
      - name: Package release
        run: |
          cd artifacts
          tar czf cuenv-${{ github.ref_name }}-x86_64-unknown-linux-gnu.tar.gz cuenv-linux-x86_64
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuenv-binaries
          path: artifacts/*.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuenv-binaries
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup cuenv
        uses: rawkode/cuenv/github/action/setup-cuenv@main
        with:
          version: 'latest'
          
      - name: Update formula with cuenv
        run: |
          # Wait for release to be available
          sleep 30
          
          # Use cuenv to run the update script
          cuenv exec -- bash -c '
            curl -L https://github.com/rawkode/cuenv/releases/download/${{ github.ref_name }}/cuenv-${{ github.ref_name }}-x86_64-unknown-linux-gnu.tar.gz -o cuenv-linux.tar.gz
            LINUX_SHA256=$(sha256sum cuenv-linux.tar.gz | cut -d" " -f1)
            sed -i "s/version \".*\"/version \"${{ github.ref_name }}\"/" tap/cuenv.rb
            sed -i "s/PLACEHOLDER_X86_64_LINUX_SHA256/$LINUX_SHA256/g" tap/cuenv.rb
            echo "Updated Homebrew formula:"
            cat tap/cuenv.rb
          '