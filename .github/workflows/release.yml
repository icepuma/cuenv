name: Release
on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
jobs:
  build:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -1 | cut -d'"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

          # Verify tag matches Cargo.toml version if this is a tag push
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            TAG_VERSION="${{ github.ref_name }}"
            if [[ "$TAG_VERSION" != "$VERSION" ]]; then
              echo "Error: Tag version ($TAG_VERSION) does not match Cargo.toml version ($VERSION)"
              exit 1
            fi
          fi
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install musl tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      - name: Build static binary
        run: |
          # Set up for musl build
          export CC=musl-gcc
          export CXX=musl-g++
          export CGO_ENABLED=1
          export RUSTFLAGS="-C target-feature=+crt-static"

          # Add musl target
          rustup target add x86_64-unknown-linux-musl

          # Build the binary
          cargo build --release --target x86_64-unknown-linux-musl

          # Create artifacts directory
          mkdir -p artifacts
          cp target/x86_64-unknown-linux-musl/release/cuenv artifacts/cuenv

          # Strip debug symbols to reduce size
          strip artifacts/cuenv

          # Check dependencies - should show "not a dynamic executable"
          echo "Binary dependencies:"
          ldd artifacts/cuenv 2>&1 || echo "Binary is statically linked!"
          echo ""
          echo "Binary info:"
          file artifacts/cuenv
          echo ""
          echo "Binary size: $(ls -lh artifacts/cuenv | awk '{print $5}')"
      - name: Package
        run: |
          cd artifacts
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          tar czf cuenv-${VERSION}-x86_64-unknown-linux-gnu.tar.gz cuenv
          echo "ASSET_PATH=artifacts/cuenv-${VERSION}-x86_64-unknown-linux-gnu.tar.gz" >> $GITHUB_ENV
      - name: Create Release
        if: github.event_name == 'push' && github.ref_type == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_PATH }}
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
