name: Release
on:
  push:
    tags:
      - '*.*.*' # Match semantic version tags like 0.3.1
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., 0.3.1)'
        required: true
        type: string
jobs:
  build:
    name: Build with Nix
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -1 | cut -d'"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

          # Verify tag matches Cargo.toml version if this is a tag push
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            TAG_VERSION="${{ github.ref_name }}"
            if [[ "$TAG_VERSION" != "$VERSION" ]]; then
              echo "Error: Tag version ($TAG_VERSION) does not match Cargo.toml version ($VERSION)"
              exit 1
            fi
          fi
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Enable Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v10
      - name: Build with Nix
        run: |
          nix build .#cuenv
          # Copy the built binary to a known location
          mkdir -p artifacts
          cp -L result/bin/cuenv artifacts/cuenv-linux-x86_64
      - name: Build cross-platform binaries
        run: |
          # For now, we'll build only for Linux x86_64 using Nix
          # Future iterations can add cross-compilation support
          cd artifacts
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          tar czf cuenv-${VERSION}-x86_64-unknown-linux-gnu.tar.gz cuenv-linux-x86_64
          mv cuenv-linux-x86_64 cuenv
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuenv-binaries
          path: artifacts/*.tar.gz
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuenv-binaries
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.version }}
          name: v${{ needs.build.outputs.version }}
          files: artifacts/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
